name: CI
env:
  mops_version: latest
  dfx_version: 0.17.0
on:
  pull_request:
    branches:
      - main
jobs:
  CI:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
      - uses: ZenVoich/setup-mops@v1
      - uses: dfinity/setup-dfx@main

      - name: Confirm dfx installation
        run: dfx --version

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install npm dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build canisters
        run: |
          dfx build --check internet_identity
          dfx generate
          dfx build --check

      - name: Run integration tests
        run: yarn test

      - name: Cache dependencies
        uses: actions/cache@v4
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
